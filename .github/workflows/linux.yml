name: Linux
on:
  push:
    branches:
      - master
      - "maintenance/**"
    tags:
      - "*"
  pull_request:
    paths:
      - "**/*.cpp"
      - "**/*.h"
      - "**/*.hpp"
      - "**/CMakeLists.txt"
      - "**/Makefile.am"
      - ".github/workflows/linux.yml"
      - "configure.ac"
      - "doc/**"
      - "mysql-test/**"
      - "packages/**"
      - "version_*"
  schedule:
    - cron: |
        0 0 * * *
concurrency:
  group: ${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true
jobs:
  source:
    name: Source
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          path: cutter
          repository: clear-code/cutter
      - uses: actions/checkout@v3
        with:
          path: mroonga.github.com
          repository: mroonga/mroonga.github.com
      - name: Install dependencies
        run: |
          grep '^deb ' /etc/apt/sources.list | \
            sed -e 's/^deb /deb-src /' | \
            sudo tee /etc/apt/sources.list.d/source.list
          sudo apt update
          sudo apt -y -V install software-properties-common
          sudo add-apt-repository -y ppa:groonga/ppa
          sudo apt update
          sudo apt -y -V install \
            autoconf \
            gettext \
            groonga-normalizer-mysql \
            libgroonga-dev \
            libmysqlclient-dev \
            libtool \
            python3-pip
          sudo pip3 install -U pip
      - name: Install Sphinx
        run: |
          sudo pip3 install sphinx myst-parser linkify-it-py
      - name: Download MySQL source
        run: |
          mkdir -p ../mysql
          cd ../mysql
          apt source mysql-server
          ln -s $(find . -maxdepth 1 -type d | sort | tail -1) mysql
      - name: Generate configure
        run: |
          ./autogen.sh
      - name: Configure for archive
        run: |
          ./configure \
            --enable-document \
            --with-cutter-source-path=cutter \
            --with-mroonga-github-com-path=mroonga.github.com \
            --with-mysql-source=../mysql/mysql
      - name: Build archive
        run: |
          make dist

      # Artifact
      - uses: actions/upload-artifact@v3
        with:
          name: source
          path: mroonga-*.tar.gz

      # Release
      - name: Upload to release
        if: |
          startsWith(github.ref, 'refs/tags/')
        run: |
          gh release create ${GITHUB_REF_NAME} \
            mroonga-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build
    needs: source
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
          # MariaDB 10.4
          - os: almalinux-8
            package-type: yum
            package: mariadb-10.4
          - os: centos-7
            package-type: yum
            package: mariadb-10.4

          # MariaDB 10.5
          - os: almalinux-8
            package-type: yum
            package: mariadb-10.5
          - os: almalinux-9
            package-type: yum
            package: mariadb-10.5
          - os: amazon-linux-2
            package-type: yum
            package: mariadb-10.5
          - os: centos-7
            package-type: yum
            package: mariadb-10.5
          - os: debian-bullseye
            package-type: apt
            package: mariadb-10.5

          # MariaDB 10.6
          - os: almalinux-8
            package-type: yum
            package: mariadb-10.6
          - os: almalinux-9
            package-type: yum
            package: mariadb-10.6
          - os: centos-7
            package-type: yum
            package: mariadb-10.6
          - os: ubuntu-jammy
            package-type: apt
            package: mariadb-10.6

          # MariaDB 10.7
          - os: almalinux-8
            package-type: yum
            package: mariadb-10.7
          - os: almalinux-9
            package-type: yum
            package: mariadb-10.7
          - os: centos-7
            package-type: yum
            package: mariadb-10.7

          # MariaDB 10.8
          - os: almalinux-8
            package-type: yum
            package: mariadb-10.8
          - os: almalinux-9
            package-type: yum
            package: mariadb-10.8
          - os: centos-7
            package-type: yum
            package: mariadb-10.8

          # MariaDB 10.9
          - os: almalinux-8
            package-type: yum
            package: mariadb-10.9
          - os: almalinux-9
            package-type: yum
            package: mariadb-10.9
          - os: centos-7
            package-type: yum
            package: mariadb-10.9

          # MariaDB 10.10
          - os: almalinux-8
            package-type: yum
            package: mariadb-10.10
          - os: almalinux-9
            package-type: yum
            package: mariadb-10.10
          - os: centos-7
            package-type: yum
            package: mariadb-10.10

          # MariaDB 10.11
          - os: almalinux-8
            package-type: yum
            package: mariadb-10.11
          - os: almalinux-9
            package-type: yum
            package: mariadb-10.11
          - os: centos-7
            package-type: yum
            package: mariadb-10.11
          - os: debian-bookworm
            package-type: apt
            package: mariadb-10.11

          # MySQL 8.0
          - os: ubuntu-jammy
            package-type: apt
            package: mysql-8.0

          # MySQL community 5.7
          - os: centos-7
            package-type: yum
            package: mysql-community-5.7

          # MySQL community 8.0
          - os: almalinux-8
            package-type: yum
            package: mysql-community-8.0
          - os: almalinux-9
            package-type: yum
            package: mysql-community-8.0
          - os: centos-7
            package-type: yum
            package: mysql-community-8.0
          - os: debian-bullseye
            package-type: apt
            package: mysql-community-8.0
# Currently, the source of MySQL Community Server for Debian 12 doesn't exist
# in MySQL APT Repository(https://repo.mysql.com/apt/debian/dists/)
# Therefore, these jobs are disabled temporarily.
# We will enable these jobs after the source of MySQL Community Server for Debian 12 is availabled.
#          - os: debian-bookworm
#            package-type: apt
#            package: mysql-community-8.0
          - os: ubuntu-jammy
            package-type: apt
            package: mysql-community-8.0

          # MySQL community minimal 8.0
          - os: almalinux-8
            package-type: yum
            package: mysql-community-minimal-8.0

          # Percona Server 5.7
          - os: centos-7
            package-type: yum
            package: percona-server-5.7

          # Percona Server 8.0
          - os: almalinux-8
            package-type: yum
            package: percona-server-8.0
          - os: almalinux-9
            package-type: yum
            package: percona-server-8.0
          - os: centos-7
            package-type: yum
            package: percona-server-8.0
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          path: groonga
          repository: groonga/groonga
          submodules: recursive
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1"
      - uses: actions/download-artifact@v3
        with:
          name: source
      - name: Update version
        if: |
          !startsWith(github.ref, 'refs/tags/') &&
          !startsWith(github.ref, 'refs/heads/maintenance/')
        run: |
          case ${{ matrix.os }} in
            debian-*|ubuntu-*)
              cd packages
              rake version:update
              ;;
          esac
        env:
          GROONGA_REPOSITORY: ../../groonga
      - name: Login to GitHub Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache ccache
        uses: actions/cache@v3
        with:
          path: packages/${{ matrix.package }}-mroonga/${{ matrix.package-type }}/build/${{ matrix.os }}/ccache
          key: package-${{ matrix.os }}-${{ matrix.package }}-ccache-${{ hashFiles('*.cpp', '*.hpp', '*.h', 'lib/*.cpp', 'lib/*.hpp') }}
          restore-keys: package-${{ matrix.os }}-${{ matrix.package }}-ccache-
      - name: Build with Docker
        run: |
          cd packages/${{ matrix.package }}-mroonga
          if [ "${{ github.event_name }}" != "schedule" ]; then
            rake docker:pull || :
          fi
          exit_status=0
          for i in {1..3}; do
            set +e
            rake ${{ matrix.package-type }}:build BUILD_DIR=build
            exit_status=$?
            set -e
            if [ ${exit_status} -eq 0 ]; then
              break
            fi
          done
          rake docker:push || :
          exit ${exit_status}
        env:
          APT_TARGETS: ${{ matrix.os }}
          GROONGA_REPOSITORY: ../../groonga
          YUM_TARGETS: ${{ matrix.os }}

      # Artifact
      - uses: actions/upload-artifact@v3
        with:
          name: packages-${{ matrix.package }}-${{ matrix.os }}
          path: packages/${{ matrix.package }}-mroonga/${{ matrix.package-type }}/repositories/

      # Release
      - name: Create assets
        if: |
          startsWith(github.ref, 'refs/tags/')
        run: |
          mv \
            packages/${{ matrix.package }}-mroonga/${{ matrix.package-type }}/repositories/ \
            repositories
          tar czf \
            ${{ matrix.package }}-mroonga-${{ matrix.os }}.tar.gz \
            repositories
      - name: Upload to release
        if: |
          startsWith(github.ref, 'refs/tags/')
        run: |
          gh release upload ${GITHUB_REF_NAME} \
            ${{ matrix.package }}-mroonga-${{ matrix.os }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Test
    needs: build
    strategy:
      fail-fast: false
      matrix:
        include:
          # MariaDB 10.4
          - os: almalinux-8
            package-type: yum
            package: mariadb-10.4
          - os: centos-7
            package-type: yum
            package: mariadb-10.4

          # MariaDB 10.5
          - os: almalinux-8
            package-type: yum
            package: mariadb-10.5
          - os: almalinux-9
            package-type: yum
            package: mariadb-10.5
          - os: amazon-linux-2
            package-type: yum
            package: mariadb-10.5
          - os: centos-7
            package-type: yum
            package: mariadb-10.5
          - os: debian-bullseye
            package-type: apt
            package: mariadb-10.5

          # MariaDB 10.6
          - os: almalinux-8
            package-type: yum
            package: mariadb-10.6
          - os: almalinux-9
            package-type: yum
            package: mariadb-10.6
          - os: centos-7
            package-type: yum
            package: mariadb-10.6
          - os: ubuntu-jammy
            package-type: apt
            package: mariadb-10.6

          # MariaDB 10.7
          - os: almalinux-8
            package-type: yum
            package: mariadb-10.7
          - os: almalinux-9
            package-type: yum
            package: mariadb-10.7
          - os: centos-7
            package-type: yum
            package: mariadb-10.7

          # MariaDB 10.8
          - os: almalinux-8
            package-type: yum
            package: mariadb-10.8
          - os: almalinux-9
            package-type: yum
            package: mariadb-10.8
          - os: centos-7
            package-type: yum
            package: mariadb-10.8

          # MariaDB 10.9
          - os: almalinux-8
            package-type: yum
            package: mariadb-10.9
          - os: almalinux-9
            package-type: yum
            package: mariadb-10.9
          - os: centos-7
            package-type: yum
            package: mariadb-10.9

          # MariaDB 10.10
          - os: almalinux-8
            package-type: yum
            package: mariadb-10.10
          - os: almalinux-9
            package-type: yum
            package: mariadb-10.10
          - os: centos-7
            package-type: yum
            package: mariadb-10.10

          # MariaDB 10.11
          - os: almalinux-8
            package-type: yum
            package: mariadb-10.11
          - os: almalinux-9
            package-type: yum
            package: mariadb-10.11
          - os: centos-7
            package-type: yum
            package: mariadb-10.11
          - os: debian-bookworm
            package-type: apt
            package: mariadb-10.11

          # MySQL 8.0
          - os: ubuntu-jammy
            package-type: apt
            package: mysql-8.0

          # MySQL community 5.7
          - os: centos-7
            package-type: yum
            package: mysql-community-5.7

          # MySQL community 8.0
          - os: almalinux-8
            package-type: yum
            package: mysql-community-8.0
          - os: almalinux-9
            package-type: yum
            package: mysql-community-8.0
          - os: centos-7
            package-type: yum
            package: mysql-community-8.0
          - os: debian-bullseye
            package-type: apt
            package: mysql-community-8.0
# Currently, the source of MySQL Community Server for Debian 12 doesn't exist
# in MySQL APT Repository(https://repo.mysql.com/apt/debian/dists/)
# Therefore, these jobs are disabled temporarily.
# We will enable these jobs after the source of MySQL Community Server for Debian 12 is availabled.
#          - os: debian-bookworm
#            package-type: apt
#            package: mysql-community-8.0

          # MySQL community minimal 8.0
          - os: almalinux-8
            package-type: yum
            package: mysql-community-minimal-8.0
            target-os: oracle-linux-8

          # Percona Server 5.7
          - os: centos-7
            package-type: yum
            package: percona-server-5.7

          # Percona Server 8.0
          - os: almalinux-8
            package-type: yum
            package: percona-server-8.0
          - os: almalinux-9
            package-type: yum
            package: percona-server-8.0
          - os: centos-7
            package-type: yum
            package: percona-server-8.0
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: packages-${{ matrix.package }}-${{ matrix.os }}
      - name: Run VM
        run: |
          os=${{ matrix.target-os }}
          : ${os:=${{ matrix.os }}}
          vagrant up ${os}
      - name: Run test
        run: |
          repositories_dir=packages/${{ matrix.package }}-mroonga/${{ matrix.package-type }}/repositories/
          mkdir -p "${repositories_dir}"
          case "${{ matrix.os }}" in
            amazon-linux-*)
              os_type=amazon-linux
              ;;
            *)
              os_type=$(echo "${{ matrix.os }}" | grep -o '^[^-]*')
              ;;
          esac
          cp -a ${os_type} "${repositories_dir}"
          os=${{ matrix.target-os }}
          : ${os:=${{ matrix.os }}}
          vagrant \
            ssh ${os} \
            -- \
            /vagrant/packages/${{ matrix.package-type }}/test.sh \
            ${{ matrix.package }}-mroonga
        timeout-minutes: 20
