name: Install
on:
  schedule:
    - cron: |
        0 0 * * *
concurrency:
  group: ${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true
jobs:
  install:
    name: Install
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        include:
          # AlmaLinux 8
          - image: "images:almalinux/8"
            package: mariadb-10.5
          - image: "images:almalinux/8"
            package: mariadb-10.6
          - image: "images:almalinux/8"
            package: mariadb-10.11

          # AlmaLinux 9
          - image: "images:almalinux/9"
            package: mariadb-10.5
          - image: "images:almalinux/9"
            package: mariadb-10.6
          - image: "images:almalinux/9"
            package: mariadb-10.11

          # Ubuntu 20.04
          - image: "images:ubuntu/20.04"
            package: mysql

          # Ubuntu 22.04
          - image: "images:ubuntu/22.04"
            package: mariadb
          - image: "images:ubuntu/22.04"
            package: mysql

          # Ubuntu 24.04
          - image: "images:ubuntu/24.04"
            package: mariadb
          - image: "images:ubuntu/24.04"
            package: mysql
    steps:
      - uses: actions/checkout@v4
      - name: Install Incus
        run: |
          sudo apt update
          sudo apt install -y -V incus
      - name: Allow egress network traffic flows for Incus
        # https://linuxcontainers.org/incus/docs/main/howto/network_bridge_firewalld/#prevent-connectivity-issues-with-incus-and-docker
        run: |
          sudo iptables -I DOCKER-USER -i incusbr0 -j ACCEPT
          sudo iptables -I DOCKER-USER -o incusbr0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
      - name: Prepare container
        run: |
          set -x
          sudo incus admin init --auto
          sudo incus launch "${{ matrix.image }}" target
          sudo incus config device add target host disk source=$PWD path=/host
          # Ideally, we would use systemctl is-system-running --wait to ensure all services are fully operational.
          # However, this option doesn't work in AlmaLinux 8 and results in an error.
          # As a workaround, we introduced a 10-second sleep delay to allow network services time to stabilize,
          # preventing DNS resolution errors when attempting to dnf install command.
          # ref: https://discuss.linuxcontainers.org/t/network-issue-with-almalinux-8-9-on-github-actions-using-incus/20046
          sleep 10
      - name: Install Mroonga
        run: |
          case "${{ matrix.image }}" in
            images:ubuntu/*)
              package_type=apt
              ;;
            *)
              package_type=yum
              ;;
          esac
          sudo incus exec target \
            -- \
            "/host/packages/${package_type}/install_test.sh" \
              "${{ matrix.package }}-mroonga"
      - name: Delete container
        run: |
          sudo incus stop target
          sudo incus delete target
