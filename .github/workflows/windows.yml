name: Windows
on:
  push:
    paths:
      - "**/*.cpp"
      - "**/*.def"
      - "**/*.h"
      - "**/*.hpp"
      - "**/CMakeLists.txt"
      - ".github/workflows/windows.yml"
      - "mysql-test/**"
      - "packages/source/**"
      - "version_*"
  pull_request:
    paths:
      - "**/*.cpp"
      - "**/*.def"
      - "**/*.h"
      - "**/*.hpp"
      - "**/CMakeLists.txt"
      - ".github/workflows/windows.yml"
      - "mysql-test/**"
      - "packages/source/**"
      - "version_*"
  schedule:
    - cron: |
        0 0 * * *
concurrency:
  group: ${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true
jobs:
  package:
    name: Package
    strategy:
      fail-fast: false
      matrix:
        include:
          - mariadb-release: "10.5"
          - mariadb-release: "10.6"
          - mariadb-release: "10.11"
          - mariadb-release: "11.4"
          - mariadb-release: "11.4"
            use-main: "yes"
          - mariadb-release: "11.4"
            use-main: "yes"
            embed: "ON"
    env:
      PACKAGE_PLATFORM: "winx64"
      VC_ARCHITECTURE: "x64"
    runs-on: windows-2019
    timeout-minutes: 45
    steps:
      - name: Disable crash dialog
        run: |
          reg add "HKCU\SOFTWARE\Microsoft\Windows\Windows Error Reporting" `
            /v DontShowUI `
            /t REG_DWORD `
            /d 1 `
            /f
      - name: Use JST
        run: |
          Set-TimeZone -Id "Tokyo Standard Time"
      - uses: actions/setup-ruby@v1
      - name: Detect MariaDB version
        run: |
          $releasesResponse = `
            Invoke-WebRequest `
              -Uri "https://downloads.mariadb.org/rest-api/mariadb/${{ matrix.mariadb-release }}/" `
              -Verbose | `
              ConvertFrom-Json
          $latestRelease = (($releasesResponse.releases | `
                               Get-Member -MemberType NoteProperty).Name | `
                              Sort-Object -Property {[Version]$_})[-1]
          $mariaDBVersion = $latestRelease
          Write-Output "MARIADB_VERSION=${mariaDBVersion}" | `
            Out-File -FilePath ${Env:GITHUB_ENV} -Encoding utf8 -Append
      - name: Cache MariaDB archive
        uses: actions/cache@v4
        with:
          path: download/
          key: download-mariadb-${{ env.MARIADB_VERSION }}
      - name: Download MariaDB
        run: |
          $mariadbTarGz = "download\mariadb-${Env:MARIADB_VERSION}.tar.gz"
          if (-not(Test-Path -Path ${mariadbTarGz})) {
            New-Item download -ItemType Directory -Force
            Invoke-WebRequest `
              -Uri "https://downloads.mariadb.org/rest-api/mariadb/${Env:MARIADB_VERSION}/mariadb-${Env:MARIADB_VERSION}.tar.gz" `
              -OutFile ${mariadbTarGz} `
              -Verbose
          }
          # Workaround for: https://jira.mariadb.org/browse/MDEV-33493
          ridk exec tar xzf "${mariadbTarGz}" `
            --exclude=storage/spider/mysql-test/spider/bugfix/r/udf_mysql_func_early_init_file.result
          Move-Item mariadb-${Env:MARIADB_VERSION} mariadb
          Remove-Item mariadb\storage\mroonga -Recurse -Force
      - uses: actions/checkout@v4
        with:
          path: mariadb/storage/mroonga
          submodules: recursive
      - name: Set environment variables
        run: |
          $mroongaVersion = "$(Get-Content mariadb\storage\mroonga\version_full)"
          $artifactName = "mariadb-${Env:MARIADB_VERSION}-with-mroonga-${mroongaVersion}"
          if ("${{ matrix.use-main }}" -eq "yes") {
            $artifactName += "-with-groonga-main"
          }
          if ("${{ matrix.embed }}" -eq "ON") {
            $artifactName += "-embed"
          }
          $artifactName += "-${Env:PACKAGE_PLATFORM}"
          if ("${{ matrix.use-main }}" -eq "yes") {
            $uploadArtifactName = $artifactName;
          } else {
            $uploadArtifactName = "release-" + $artifactName;
          }
          if ("${Env:MARIADB_VERSION}" -match "^10\.*") {
            $testDirName = "mysql-test"
          } else {
            $testDirName = "mariadb-test"
          }
          Write-Output "MROONGA_VERSION=${mroongaVersion}" | `
            Out-File -FilePath ${Env:GITHUB_ENV} -Encoding utf8 -Append
          Write-Output "ARTIFACT_NAME=${artifactName}" | `
            Out-File -FilePath ${Env:GITHUB_ENV} -Encoding utf8 -Append
          Write-Output "UPLOAD_ARTIFACT_NAME=${uploadArtifactName}" | `
            Out-File -FilePath ${Env:GITHUB_ENV} -Encoding utf8 -Append
          Write-Output "TEST_DIR_NAME=${testDirName}" | `
            Out-File -FilePath ${Env:GITHUB_ENV} -Encoding utf8 -Append
      - uses: actions/cache@v4
        with:
          path: |
            ~\AppData\Roaming\ccache
          key: source-${{ env.MARIADB_VERSION }}-${{ env.VC_ARCHITECTURE }}-ccache-${{ hashFiles('mariadb/storage/mroonga/**.{cpp,hpp,h}') }}
          restore-keys: source-${{ env.MARIADB_VERSION }}-${{ env.VC_ARCHITECTURE }}-ccache-
      - name: Prepare ccache
        run: |
          choco install ccache
          ccache --show-stats --verbose
          Write-Output "CMAKE_C_COMPILER_LAUNCHER=ccache" | `
            Out-File -FilePath ${Env:GITHUB_ENV} -Encoding utf8 -Append
          Write-Output "CMAKE_CXX_COMPILER_LAUNCHER=ccache" | `
            Out-File -FilePath ${Env:GITHUB_ENV} -Encoding utf8 -Append
      - name: Prepare MariaDB
        run: |
          cd mariadb
          if ("${Env:MARIADB_VERSION}" -match "^10\.5|^10\.6|^10\.11|^11\.4") {
            ridk exec patch -p1 -i `
              storage\mroonga\packages\source\patches\mariadb-10.5.5-add-a-missing-export-symbol.diff
          }
          Copy-Item storage\mroonga\build\mroonga_windows.cmake cmake\build_configurations\
      - uses: actions/checkout@v4
        if: |
          matrix.use-main == 'yes'
        with:
          path: mariadb/extra/groonga
          repository: groonga/groonga
          submodules: recursive
      - name: Prepare Groonga
        run: |
          cd mariadb
          if ("${{ matrix.use-main }}" -eq "yes") {
            pushd extra\groonga\vendor
            ruby download_lz4.rb
            ruby download_mecab.rb
            ruby download_message_pack.rb
            ruby download_rapidjson.rb
            ruby download_xxhash.rb
            ruby download.rb zstd
            popd
          } else {
            Invoke-WebRequest `
              -Uri "https://packages.groonga.org/source/groonga/groonga-latest.zip" `
              -OutFile groonga-latest.zip
            Expand-Archive groonga-latest.zip .
            Remove-Item groonga-latest.zip
            Move-Item groonga-* extra\groonga
          }
          Remove-Item extra\groonga\test -Recurse -Force
          cd extra\groonga\vendor\mruby-source
          Invoke-WebRequest `
            -Uri "https://github.com/mruby/mruby/pull/6279.patch" `
            -OutFile 6279.patch
          ridk exec patch -p1 -i 6279.patch
      - uses: actions/checkout@v4
        if: |
          matrix.use-main == 'yes'
        with:
          path: mariadb/extra/groonga-normalizer-mysql
          repository: groonga/groonga-normalizer-mysql
          submodules: recursive
      - name: Download groonga-normalizer-mysql latest
        if: |
          matrix.use-main != 'yes'
        run: |
          cd mariadb
          Invoke-WebRequest `
            -Uri "https://packages.groonga.org/source/groonga-normalizer-mysql/groonga-normalizer-mysql-latest.zip" `
            -OutFile groonga-normalizer-mysql-latest.zip
          Expand-Archive groonga-normalizer-mysql-latest.zip .
          Remove-Item groonga-normalizer-mysql-latest.zip
          Move-Item `
            groonga-normalizer-mysql-* `
            extra\groonga-normalizer-mysql
      - name: Run CMake
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" %VC_ARCHITECTURE% || exit /B
          cmake ^
            -S mariadb ^
            -B build ^
            -G "Ninja" ^
            -DBUILD_CONFIG=mroonga_windows ^
            -DCMAKE_INSTALL_PREFIX=install ^
            -DCONNECT_WITH_LIBXML2=OFF ^
            -DMRN_GROONGA_EMBED=${{ matrix.embed || 'OFF' }} ^
            -DMRN_GROONGA_NORMALIZER_MYSQL_EMBED=${{ matrix.embed || 'OFF' }} ^
            -DGRN_WITH_MRUBY=ON ^
            -DGRN_WITH_WINDOWS_BACK_TRACE=OFF ^
            -DGRN_WITH_XSIMD=no || exit /B
      - name: Install
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" %VC_ARCHITECTURE% || exit /B
          set CMAKE_BUILD_PARALLEL_LEVEL=%NUMBER_OF_PROCESSORS%
          cmake ^
            --build build ^
            --config RelWithDebInfo ^
            --target install ^
            --verbose || exit /B
          ccache --show-stats --verbose
      - name: Create package
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" %VC_ARCHITECTURE% || exit /B
          set CMAKE_BUILD_PARALLEL_LEVEL=%NUMBER_OF_PROCESSORS%
          cmake ^
            --build build ^
            --config RelWithDebInfo ^
            --target package ^
            --verbose || exit /B
          ccache --show-stats --verbose
      - name: Prepare package
        run: |
          pushd build
          Expand-Archive `
            mariadb-${Env:MARIADB_VERSION}-${Env:PACKAGE_PLATFORM}.zip `
            .
          pushd mariadb-${Env:MARIADB_VERSION}-${Env:PACKAGE_PLATFORM}
          Remove-Item ${Env:TEST_DIR_NAME} -Recurse -Force
          popd
          Move-Item `
            mariadb-${Env:MARIADB_VERSION}-${Env:PACKAGE_PLATFORM} `
            ..\
          popd
          Compress-Archive `
            -Path mariadb-${Env:MARIADB_VERSION}-${Env:PACKAGE_PLATFORM} `
            -DestinationPath "${Env:ARTIFACT_NAME}.zip"

      # Artifact
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.UPLOAD_ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_NAME }}.zip

      - name: Test
        run: |
          cd install\${Env:TEST_DIR_NAME}
          $suites = `
            Get-ChildItem -Recurse -Directory -Name t plugin\mroonga | `
              Split-Path -Parent | `
              % {$_.replace("\", "/")}
          perl mysql-test-run.pl `
            --force `
            --no-check-testcases `
            --parallel=${Env:NUMBER_OF_PROCESSORS} `
            --retry=3 `
            --suite=$($suites -join ",")

      - name: "Test: reference count"
        run: |
          cd install\${Env:TEST_DIR_NAME}
          $suites = `
            Get-ChildItem -Recurse -Directory -Name t plugin\mroonga | `
              Split-Path -Parent | `
              % {$_.replace("\", "/")}
          perl mysql-test-run.pl `
            --force `
            --mysqld=--loose-plugin-mroonga-enable-reference-count=ON `
            --no-check-testcases `
            --parallel=${Env:NUMBER_OF_PROCESSORS} `
            --retry=3 `
            --suite=$($suites -join ",")
