name: Windows
on:
  - push
  - pull_request
jobs:
  package:
    name: Package
    strategy:
      fail-fast: false
      matrix:
        label:
          - MariaDB 10.2 32bit
          - MariaDB 10.2 64bit
          - MariaDB 10.3 32bit
          - MariaDB 10.3 64bit
          - MariaDB 10.4 32bit
          - MariaDB 10.4 64bit
          - MariaDB 10.5 32bit
          - MariaDB 10.5 64bit
          - MariaDB 10.5 64bit (master)
        include:
          - label: MariaDB 10.2 32bit
            mariadb-version: "10.2.36"
            package-platform: "win32"
            cmake-architecture: "Win32"
            vc-architecture: "x64_x86"
          - label: MariaDB 10.2 64bit
            mariadb-version: "10.2.36"
            package-platform: "winx64"
            cmake-architecture: "x64"
            vc-architecture: "x64"
          - label: MariaDB 10.3 32bit
            mariadb-version: "10.3.27"
            package-platform: "win32"
            cmake-architecture: "Win32"
            vc-architecture: "x64_x86"
          - label: MariaDB 10.3 64bit
            mariadb-version: "10.3.27"
            package-platform: "winx64"
            cmake-architecture: "x64"
            vc-architecture: "x64"
          - label: MariaDB 10.4 32bit
            mariadb-version: "10.4.17"
            package-platform: "win32"
            cmake-architecture: "Win32"
            vc-architecture: "x64_x86"
          - label: MariaDB 10.4 64bit
            mariadb-version: "10.4.17"
            package-platform: "winx64"
            cmake-architecture: "x64"
            vc-architecture: "x64"
          - label: MariaDB 10.5 32bit
            mariadb-version: "10.5.8"
            package-platform: "win32"
            cmake-architecture: "Win32"
            vc-architecture: "x64_x86"
          - label: MariaDB 10.5 64bit
            mariadb-version: "10.5.8"
            package-platform: "winx64"
            cmake-architecture: "x64"
            vc-architecture: "x64"
          - label: MariaDB 10.5 64bit (master)
            mariadb-version: "10.5.8"
            package-platform: "winx64"
            cmake-architecture: "x64"
            vc-architecture: "x64"
            use-master: "yes"
    runs-on: windows-2019
    steps:
      - name: Disable crash dialog
        run: |
          reg add "HKCU\SOFTWARE\Microsoft\Windows\Windows Error Reporting" `
            /v DontShowUI `
            /t REG_DWORD `
            /d 1 `
            /f
      - name: Use JST
        run: |
          Set-TimeZone -Id "Tokyo Standard Time"
      - uses: actions/setup-ruby@v1
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set information
        id: info
        run: |
          $MROONGA_VERSION = "$(Get-Content version)"
          $ARTIFACT_NAME = "mariadb-${{ matrix.mariadb-version }}-with-mroonga-${MROONGA_VERSION}"
          if ("${{ matrix.use-master }}" -eq "yes") {
            $ARTIFACT_NAME += "-with-groonga-master"
          }
          $ARTIFACT_NAME += "-${{ matrix.package-platform }}"
          Write-Output "::set-output name=mroonga-version::${MROONGA_VERSION}"
          Write-Output "::set-output name=artifact-name::${ARTIFACT_NAME}"
      - name: Prepare MariaDB
        run: |
          cd ..
          ridk exec curl --location -O https://downloads.mariadb.org/f/mariadb-${{ matrix.mariadb-version }}/source/mariadb-${{ matrix.mariadb-version }}.tar.gz
          ridk exec tar xzf mariadb-${{ matrix.mariadb-version }}.tar.gz
          cd mariadb-${{ matrix.mariadb-version }}
          if ("${{ matrix.mariadb-version }}" -match "^10\.5") {
            ridk exec patch -p1 -i `
              ..\mroonga\packages\source\patches\mariadb-10.5.5-add-a-missing-export-symbol.diff
          }
          # mariadb-10.2.36, 10.3.27, 10.4.17, 10.5.8 have a syntax error in CMakeList of mariadb-connector-c.
          # (mariadb-connector-c is MariaDB client library.)
          # This bug has already fixed by https://github.com/mariadb-corporation/mariadb-connector-c/commit/242cab8cbcd91af882233730a83627d3b12ced83
          # However, this fix is not included that above version of mariadb.
          # Therefore, we fix this bug by using this patch until next release for mariadb.
          # We will remove this patch when the next version of mariadb will be released.
          ridk exec curl `
            -o mariadb-connector-c-fix-syntax-error-in-cmake-3.20.patch `
            https://github.com/mariadb-corporation/mariadb-connector-c/commit/242cab8cbcd91af882233730a83627d3b12ced83.patch
          ridk exec patch -d libmariadb -p1 -i `
            ..\mariadb-connector-c-fix-syntax-error-in-cmake-3.20.patch
          Remove-Item storage\mroonga -Recurse -Force
          Copy-Item ..\mroonga storage\mroonga -Recurse
          cd ..
          Move-Item mariadb-${{ matrix.mariadb-version }} source
      - name: Prepare Groonga
        run: |
          cd ..\source
          New-Item storage\mroonga\vendor -ItemType Directory
          if ("${{ matrix.use-master }}" -eq "yes") {
            git clone --quiet --depth 1 --recursive `
              https://github.com/groonga/groonga.git `
              storage\mroonga\vendor\groonga
            pushd storage\mroonga\vendor\groonga\vendor
            ruby download_lz4.rb
            ruby download_mecab.rb
            ruby download_message_pack.rb
            ruby download_rapidjson.rb
            ruby download_xxhash.rb
            ruby download.rb zstd
            popd
          } else {
            Invoke-WebRequest `
              -Uri "https://packages.groonga.org/source/groonga/groonga-latest.zip" `
              -OutFile groonga-latest.zip
            Expand-Archive groonga-latest.zip .
            Remove-Item groonga-latest.zip
            Move-Item groonga-* storage\mroonga\vendor\groonga
          }
          Remove-Item storage\mroonga\vendor\groonga\test -Recurse -Force
      - name: Prepare groonga-normalizer-mysql
        run: |
          cd ..\source
          if ("${{ matrix.use-master }}" -eq "yes") {
            git clone --quiet --depth 1 --recursive `
              https://github.com/groonga/groonga-normalizer-mysql.git `
              storage\mroonga\vendor\groonga\vendor\plugins\groonga-normalizer-mysql
          } else {
            Invoke-WebRequest `
              -Uri "https://packages.groonga.org/source/groonga-normalizer-mysql/groonga-normalizer-mysql-latest.zip" `
              -OutFile groonga-normalizer-mysql-latest.zip
            Expand-Archive groonga-normalizer-mysql-latest.zip .
            Remove-Item groonga-normalizer-mysql-latest.zip
            Move-Item `
              groonga-normalizer-mysql-* `
              storage\mroonga\vendor\groonga\vendor\plugins\groonga-normalizer-mysql
          }
      - name: Run CMake
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" ${{ matrix.vc-architecture }}
          mkdir ..\build
          cd ..\build
          rem TODO: Remove -DGRN_WITH_ZSTD=no when Groonga 10.2.0 is released.
          cmake ..\source ^
            -A "${{ matrix.cmake-architecture }}" ^
            -G "Visual Studio 16 2019" ^
            -DMRN_GROONGA_EMBED=OFF ^
            -DMRN_GROONGA_NORMALIZER_MYSQL_EMBED=OFF ^
            -DGRN_WITH_MRUBY=ON ^
            -DGRN_WITH_ZSTD=no
      - name: Create package
        run: |
          cd ..\build
          $Env:CMAKE_BUILD_PARALLEL_LEVEL = $Env:NUMBER_OF_PROCESSORS
          cmake --build . --config RelWithDebInfo --target package
      - name: Install
        run: |
          cd ..\build
          Expand-Archive mariadb-${{ matrix.mariadb-version }}-${{ matrix.package-platform}}.zip
          cd mariadb-${{ matrix.mariadb-version }}-${{ matrix.package-platform}}
          netsh advfirewall firewall add rule `
            name="mariadb" `
            dir=in `
            action=allow `
            protocol=TCP `
            localport=3306 `
            enable=yes `
            profile=any
          ..\..\source\storage\mroonga\packages\windows\install-mroonga.ps1 `
            -mariadbVersion ${{ matrix.mariadb-version }} `
            -platform ${{ matrix.package-platform }}
          cd ..
          Move-Item `
            mariadb-${{ matrix.mariadb-version }}-${{ matrix.package-platform}} `
            ..\mroonga\

      # Artifact
      - name: Compress the artifact
        run: |
          Compress-Archive `
            -Path mariadb-${{ matrix.mariadb-version }}-${{ matrix.package-platform }}\* `
            -DestinationPath "${{ steps.info.outputs.artifact-name }}.zip"
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.info.outputs.artifact-name }}
          path: ${{ steps.info.outputs.artifact-name }}.zip

      # Release
      - name: Ensure creating release
        if: |
          matrix.use-master != 'yes' && startsWith(github.ref, 'refs/tags/')
        id: create-release
        uses: actions/github-script@0.4.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const AsyncFunction = Object.getPrototypeOf(async () => {}).constructor
            const fs = require("fs");
            const path = ".github/workflows/ensure-creating-release.js";
            const script = fs.readFileSync(path).toString();
            const func = new AsyncFunction("require", "github", "context", script);
            return await func(require, github, context);
      - name: Upload the artifact to release
        uses: actions/upload-release-asset@v1.0.1
        if: |
          matrix.use-master != 'yes' && startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.result }}
          asset_path: ${{ steps.info.outputs.artifact-name }}.zip
          asset_name: ${{ steps.info.outputs.artifact-name }}.zip
          asset_content_type: application/zip
