%define _centos_ver %{?centos_ver:%{centos_ver}}%{!?centos_ver:5}

%define mysql_version_default 8.0.20
%define percona_server_version_default 11
%define rpm_release_default 1
%define mysql_dist_default    %{?dist}
%define mysql_download_base_url_default https://repo.percona.com/ps-80/yum/release/%{_centos_ver}/SRPMS
%define mysql_spec_file_default percona-server.spec

%define _mysql_version %{?mysql_version:%{mysql_version}}%{!?mysql_version:%{mysql_version_default}}
%define _percona_server_version %{?percona_server_version:%{percona_server_version}}%{!?percona_server_version:%{percona_server_version_default}}
%define _rpm_release %{?rpm_release:%{rpm_release}}%{!?rpm_release:%{rpm_release_default}}
%define _mysql_dist %{?mysql_dist:%{mysql_dist}}%{!?mysql_dist:%{mysql_dist_default}}
%define _mysql_download_base_url %{?mysql_download_base_url:%{mysql_download_base_url}}%{!?mysql_download_base_url:%{mysql_download_base_url_default}}
%define _mysql_spec_file %{?mysql_spec_file:%{mysql_spec_file}}%{!?mysql_spec_file:%{mysql_spec_file_default}}

%define _mysql_release %{_percona_server_version}.%{_rpm_release}

%define groonga_required_version @REQUIRED_GROONGA_VERSION@

%if %{_centos_ver} >= 7
%define service_status() (systemctl status %1)
%define service_control() (systemctl %2 %1)
%else
%define service_status() (/sbin/service %1 status)
%define service_control() (/sbin/service %1 %2)
%endif

Name:           percona-server-80-mroonga
Version:        @VERSION@
Release:        1%{?dist}
Summary:        A fast fulltext searchable storage engine for MySQL

Group:          Applications/Databases
License:        LGPLv2.1
URL:            http://mroonga.org/
Source0:        http://packages.groonga.org/source/mroonga/mroonga-%{version}.tar.gz

BuildRoot:      %{_tmppath}/%{name}-%{version}-%{release}-%(%{__id_u} -n)
BuildRequires:	groonga-devel >= %{groonga_required_version}
BuildRequires:	groonga-normalizer-mysql-devel
BuildRequires:	wget
BuildRequires:	which
BuildRequires:	gcc
BuildRequires:	gcc-c++
BuildRequires:	cmake3
BuildRequires:	numactl-devel
BuildRequires:	zlib-devel
BuildRequires:	percona-server-devel = %{_mysql_version}-%{_mysql_release}%{_mysql_dist}
BuildRequires:	selinux-policy-devel
BuildRequires:	openldap-devel
Requires:       percona-server-server = %{_mysql_version}-%{_mysql_release}%{_mysql_dist}
Requires:       percona-server-client = %{_mysql_version}-%{_mysql_release}%{_mysql_dist}
Requires:       groonga-libs >= %{groonga_required_version}
Requires:       groonga-normalizer-mysql

%description
Mroonga is a fast fulltext searchable storage plugin for MySQL.
It is based on Groonga that is a fast fulltext search engine and
column store. Groonga is good at real-time update.

%package doc
Summary:	Documentation for Mroonga
Group:		Documentation
License:	LGPLv2.1

%description doc
Documentation for Mroonga


%prep
%setup -q -n mroonga-%{version}

mysql_full_version=%{_mysql_version}-%{_mysql_release}.generic
srpm=percona-server-${mysql_full_version}.src.rpm
if [ ! -f ../../SRPMS/$srpm ]; then
    wget --continue -O ../../SRPMS/$srpm %{_mysql_download_base_url}/$srpm
    rpm -Uvh ../../SRPMS/$srpm
fi

%build
mysql_source_base_name=percona-server-%{_mysql_version}-%{_percona_server_version}
mysql_source=../${mysql_source_base_name}/${mysql_source_base_name}
if [ ! -d ${mysql_source} ]; then
    specs_dir=
    MYSQL_RPMBUILD_TEST=no rpmbuild -bp \
        --define 'runselftest 0' \
        --define 'optflags -O0' \
        ../../SPECS/%{_mysql_spec_file}
    pushd ${mysql_source}
    mkdir build && pushd build
    cmake3 .. \
        -DBUILD_CONFIG=mysql_release \
        -DINSTALL_LAYOUT=RPM \
        -DCMAKE_BUILD_TYPE=RelWithDebInfo \
        -DWITH_BOOST=../.. \
        -DINSTALL_LIBDIR="%{_lib}/mysql" \
        -DINSTALL_PLUGINDIR="%{_lib}/mysql/plugin"
    popd && popd
fi
%configure \
    --disable-static \
    --with-mysql-source=${mysql_source} \
    --with-mysql-build=${mysql_source}/build \
    --enable-fast-mutexes \
    %{?mroonga_configure_options}
make %{?_smp_mflags}

%install
rm -rf $RPM_BUILD_ROOT
make install DESTDIR=$RPM_BUILD_ROOT
rm $RPM_BUILD_ROOT%{_libdir}/mysql/plugin/*.la
mv $RPM_BUILD_ROOT%{_datadir}/doc/mroonga/ mysql-mroonga-doc/

%clean
rm -rf $RPM_BUILD_ROOT

%post
if ! %{service_status mysqld} > /dev/null; then
  %{service_control mysqld start}
  stop_after_installation=1
  auto_generated_password=`awk '/root@localhost/{print $NF}' /var/log/mysqld.log | tail -n 1`
else
  stop_after_installation=0
  auto_generated_password=""
fi

mysql_command=`which mysql`
password_option=""
if ! $mysql_command -u root -e "quit" > /dev/null 2>&1; then
  if [ -n "${auto_generated_password}" ]; then
    password_option="-p${auto_generated_password}"
  else
    password_option="-p"
  fi
fi

mysql="${mysql_command} -u root ${password_option}"

if [ -n "$auto_generated_password" ]; then
  ${mysql} --connect-expired-password \
           -e "ALTER USER user() IDENTIFIED BY '$auto_generated_password'"
fi

current_version=0
version=`echo %{groonga_required_version} | sed -e 's/\.//g'`
required_version=`expr $version`
version=`${mysql} -e "SHOW VARIABLES LIKE 'mroonga_libgroonga_version'" | \
  grep mroonga | cut -f 2 | sed -e 's/\.//g'`
if [ -n "$version" ]; then
  current_version=`expr $version`
fi
install_sql=%{_datadir}/mroonga/install.sql
uninstall_sql=%{_datadir}/mroonga/uninstall.sql

if [ "$1" = 2 ] ; then
  if [ $current_version -lt $required_version ]; then
    %{service_control mysqld restart}
  fi
  ${mysql} < ${uninstall_sql} || \
      (echo "run the following command to unregister Mroonga:"; \
       echo "  ${mysql} < ${uninstall_sql}")
fi

${mysql} < ${install_sql} || \
  (echo "run the following command to register Mroonga:"; \
   echo "  ${mysql} < ${install_sql}")

if [ "$stop_after_installation" = "1" ]; then
  if [ -n "$auto_generated_password" ];then
    ${mysql} -e "ALTER USER root@localhost PASSWORD EXPIRE"
  fi
  %{service_control mysqld stop}
fi

%preun
if ! %{service_status mysqld} > /dev/null; then
  %{service_control mysqld start}
  stop_after_uninstallation=1
  auto_generated_password=`awk '/root@localhost/{print $NF}' /var/log/mysqld.log | tail -n 1`
else
  stop_after_uninstallation=0
  auto_generated_password=""
fi

uninstall_sql=%{_datadir}/mroonga/uninstall.sql
mysql_command=`which mysql`
password_option=""
if ! $mysql_command -u root -e "quit" > /dev/null 2>&1; then
  if [ -n "${auto_generated_password}" ]; then
    password_option="-p${auto_generated_password}"
  else
    password_option="-p"
  fi
fi

mysql="${mysql_command} -u root ${password_option}"

if [ -n "$auto_generated_password" ]; then
  ${mysql} --connect-expired-password \
           -e "ALTER USER user() IDENTIFIED BY '$auto_generated_password'"
fi

if [ "$1" = 0 ]; then
  ${mysql} < ${uninstall_sql} || \
    (echo "run the following command to unregister Mroonga:"; \
     echo "  ${mysql} < ${uninstall_sql}")
fi

if [ "$stop_after_uninstallation" = "1" ]; then
  if [ -n "$auto_generated_password" ];then
    ${mysql} -e "ALTER USER root@localhost PASSWORD EXPIRE"
  fi
  %{service_control mysqld stop}
fi

%files
%defattr(-,root,root,-)
%{_libdir}/mysql/plugin/
%{_datadir}/mroonga/*
%{_datadir}/man/man1/*
%{_datadir}/man/*/man1/*

%files doc
%defattr(-,root,root,-)
%doc README COPYING
%doc mysql-mroonga-doc/*

%changelog
* Sat Aug 29 2020 Horimoto Yasuhiro <horimoto@clear-code.com> - 10.06-1
- initial release.
