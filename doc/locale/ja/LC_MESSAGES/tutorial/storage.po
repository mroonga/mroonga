# -*- po -*-
# Japanese translations for Mroonga package.
# Copyright (C) 2009-2023, Mroonga Project
# This file is distributed under the same license as the Mroonga package.
# Automatically generated, 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: Mroonga mrn_version\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2023-07-27 16:42+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid "Storage mode"
msgstr "ストレージモード"

msgid "Here we explain how to use storage mode of Mroonga"
msgstr "ここでは Mroonga におけるストレージモードの利用方法を説明します。"

msgid "How to use full text search"
msgstr "全文検索の利用方法"

msgid ""
"After confirming the installation, let's create a table. The important point "
"is to specify Mroonga by ``ENGINE = Mroonga``:"
msgstr ""
"インストールが確認できたら、テーブルを1つ作成してみましょう。 ``ENGINE = "
"Mroonga`` とMroongaを指定するところがポイントです。"

msgid "We put data by INSERT:"
msgstr "``INSERT`` でデータを投入してみましょう。"

msgid "Try full text search:"
msgstr "全文検索を実行してみます。"

msgid "Yes, full text search works."
msgstr "おぉぉー。検索できましたね。"

msgid "How to get search score"
msgstr "検索スコアの取得方法"

msgid ""
"In version 1.0.0 or before, Mroonga used a special column named ``_score`` "
"to get search score. From version 1.0.0, it follows MySQL's standard way to "
"get search score."
msgstr ""
"1.0.0以前のMroongaではMySQLの標準的な検索スコアの取得方法ではなく、 "
"``_score`` という専用のカラムを作成するという独自の方法でした。1.0.0からは"
"MySQLの標準的な取得方法になっています。"

msgid ""
"We often want to display more relevant results first in full text search. We "
"use search score in such case."
msgstr ""
"全文検索を行う際、指定したキーワードにより内容が一致するレコードを上位に表示"
"したいというような場合があります。そうしたケースでは検索スコアを利用します。"

msgid ""
"We can get search score by MySQL's standard way [#score]_, i.e. we use "
"MATCH...AGAINST in one of columns in SELECT or ORDER BY."
msgstr ""
"検索スコアはMySQLの標準的な方法 [#score]_ で取得できます。つまり、SELECTの取"
"得するカラム名を指定するところやORDER BYのところにMATCH...AGAINSTを指定しま"
"す。"

msgid "Let's try:"
msgstr "それでは実際にやってみましょう。"

msgid ""
"The result having the search word ``fine`` more, i.e. ``id = 3`` message "
"having the higher search score, is displayed first. And you also get search "
"score by using MATCH AGAINST in SELECT phrase."
msgstr ""
"検索対象の文字列 ``fine`` をより多く含む、すなわち検索スコアの高い ``id = "
"3`` のメッセージが上に来ていることが確認できます。また、SELECT句にMATCH "
"AGAINSTを記述しているため、検索スコアも取得できています。"

msgid "You can use ``AS`` to change the attribute name:"
msgstr "属性名を変更したい場合は ``AS`` を使って下さい。"

msgid "How to specify the parser for full text search"
msgstr "全文検索用パーサの変更"

msgid ""
"MySQL has the following syntax to specify the parser [#parser]_ for full "
"text search::"
msgstr ""
"MySQLは全文検索用のパーサ [#parser]_ を指定する以下のような構文を持っていま"
"す。::"

msgid ""
"To use this syntax, you need to register all parsers in MySQL beforehand. On "
"the other hand, Groonga can dynamically add a tokenizer, that is a parser in "
"MySQL. So if use this syntax in Mroonga, tokenizers that are added in "
"Groonga dynamically cannot be supported. We think that this limitation "
"decreases the convenience, and we choose our own syntax using COMMENT like "
"the following::"
msgstr ""
"しかし、この構文を利用する場合は、あらかじめすべてのパーサをMySQLに登録してお"
"く必要があります。一方、Groongaはトークナイザー（MySQLでいうパーサ）を動的に"
"追加することができます。そのため、Mroongaでもこの構文を採用するとGroonga側に"
"動的に追加されたトークナイザーに対応できなくなります。Groongaに動的に追加され"
"るトークナイザーにはMeCabを用いたトークナイザーもあり、この制限に縛られること"
"は利便性を損なうと判断し、以下のようなコメントを用いた独自の構文を採用するこ"
"とにしました。::"

msgid ""
"``COMMENT`` in ``FULLTEXT INDEX`` is only supported MySQL 5.5 or later. If "
"you use MySQL 5.1, use ``mroonga_default_tokenizer`` variable described "
"below."
msgstr ""
"``FULLTEXT INDEX`` に ``COMMENT`` を指定できるのはMySQL 5.5からになります。"
"MySQL 5.1を利用している場合は後述の ``mroonga_default_tokenizer`` 変数を利用"
"してください。"

msgid ""
"You can specify one of the following values as the tokenizer. \"tokenizer\" "
"in Mroonga equals to \"parser\" in MySQL."
msgstr ""
"トークナイザーに指定できるのは以下の値です。Mroongaで言う「トークナイザー」と"
"MySQLで言う「パーサー」は同じものです。"

msgid ""
"You can specify the default parser by passing ``--with-default-tokenizer`` "
"option in ``configure`` when you build Mroonga::"
msgstr ""
"デフォルトのパーサは ``configure`` の ``--with-default-tokenizer`` オプション"
"でビルド時に指定することができます。::"

msgid ""
"Or you can set ``mroonga_default_tokenizer`` variable in ``my.cnf`` or by "
"SQL. If you specify it in ``my.cnf``, the change will not be lost after "
"restarting MySQL, but you need to restart MySQL to make it effective. On the "
"other hand, if you set it in SQL, the change is effective immediately, but "
"it will be lost when you restart MySQL."
msgstr ""
"また、 ``my.cnf`` またはSQL内で ``mroonga_default_tokenizer`` 変数を指定する"
"ことでも指定できます。 ``my.cnf`` で指定するとMySQLを再起動しても値は変更され"
"たままですが、反映させるために再起動しなければいけません。一方、SQLで指定した"
"場合はすぐに設定が反映されますが、MySQLが再起動すると設定は失われます。"

msgid "my.cnf::"
msgstr ""

msgid "SQL:"
msgstr ""

msgid "How to specify the normalizer"
msgstr "ノーマライザーの指定方法"

msgid ""
"Mroonga uses normalizer corresponding to the encoding of document. It is "
"used when tokenizing text and storing table key."
msgstr ""
"Mroongaは、文書のエンコーディング(照合順序)に応じたノーマライザーを使用しま"
"す。これはテキストをトークナイズするときとテーブルのキーを保存するときに使わ"
"れます。"

msgid ""
"It is used ``NormalizerMySQLGeneralCI`` normalizer when the encoding is "
"``utf8_general_ci`` or ``utf8mb4_general_ci``."
msgstr ""
"``utf8_general_ci`` または ``utf8mb4_general_ci`` の場合、"
"``NormalizerMySQLGeneralCI`` ノーマライザーが使用されます。"

msgid ""
"It is used ``NormalizerMySQLUnicodeCI`` normalizer when the encoding is "
"``utf8_unicode_ci`` or ``utf8mb4_unicode_ci``."
msgstr ""
"``utf8_unicode_ci`` または ``utf8mb4_unicode_ci`` の場合、"
"``NormalizerMySQLUnicodeCI`` ノーマライザーが使用されます。"

msgid "It isn't used normalizer when the encoding is ``utf8_bin``."
msgstr "``utf8_bin`` の場合、ノーマライザーは使用されません。"

msgid ""
"Here is an example that uses ``NormalizerMySQLUnicodeCI`` normalizer by "
"specifying ``utf8_unicode_ci``:"
msgstr ""
"以下は、 ``utf8_unicode_ci`` の照合順序を指定して "
"``NormalizerMySQLUnicodeCI`` ノーマライザーを使用する例です。"

msgid "Mroonga has the following syntax to specify Groonga's normalizer::"
msgstr ""
"Mroongaは、Groongaのノーマライザーを指定する以下のような構文を持っていま"
"す。::"

msgid ""
"See `Groonga's documentation about normalizer <http://groonga.org/docs/"
"reference/normalizers.html>`_ for more details."
msgstr ""
"詳細は `Groongaのノーマライザーのドキュメント <http://groonga.org/ja/docs/"
"reference/normalizers.html>`_ を確認してください。"

msgid "Here is an example that uses ``NormalizerAuto`` normalizer:"
msgstr "以下は、``NormalizerAuto`` のノーマライザーを使用する例です。"

msgid "How to specify the token filters"
msgstr "トークンフィルターの指定方法"

msgid "Mroonga has the following syntax to specify Groonga's token filters.::"
msgstr ""
"Mroongaは、Groongaのトークンフィルターを指定する以下のような構文を持っていま"
"す。::"

msgid "Here is an example that uses ``TokenFilterStem`` token filter:"
msgstr "以下は、``TokenFilterStem`` のトークンフィルターを使用する例です。"

msgid ""
"See `Groonga's documentation about token filter documentation <http://"
"groonga.org/docs/reference/token_filters.html>`_ for more details."
msgstr ""
"詳細は `Groongaのトークンフィルターのドキュメント <http://groonga.org/ja/"
"docs/reference/token_filters.html>`_ を確認してください。"

msgid "Here is an example that uses ``TokenFilterStopWord`` token filter:"
msgstr "以下は、``TokenFilterStopWord`` のトークンフィルターを使用する例です。"

msgid "It's used that specifying the lexicon table for fulltext search."
msgstr "これは、全文検索用の語彙表テーブルを指定する方法を使用しています。"

msgid "How to specify Groonga's column flags"
msgstr "Groongaのカラムフラグの指定方法"

msgid "Mroonga has the following syntax to specify Groonga's column flags::"
msgstr ""
"Mroongaは、Groongaのカラムフラグを指定する以下のような構文を持っています。::"

msgid "Here is an example that uses ``COMPRESS_ZLIB`` flag:"
msgstr "以下は、``COMPRESS_ZLIB`` フラグを使用する例です。"

msgid ""
"See `Groonga's documentation about column flags <http://groonga.org/docs/"
"reference/commands/column_create.html#parameters>`_ for more details."
msgstr ""
"Groongaのカラムフラグの詳細については `Groongaのドキュメント <http://groonga."
"org/ja/docs/reference/commands/column_create.html#parameters>`_ を参照してく"
"ださい。"

msgid "How to use geolocation search"
msgstr "位置情報検索の利用方法"

msgid ""
"In storage mode, you can use fast geolocation search in addition to full "
"text search. But unlike MyISAM, you can only store POINT type data. You "
"cannot store other types data like LINE. And fast search using index only "
"supports MBRContains. It does not support MBRDisjoint."
msgstr ""
"ストレージモードでは全文検索だけではなく位置情報検索も高速に実行できます。た"
"だし、MyISAMとは異なりデータとして格納できるのはPOINT型のみです。LINEなどの他"
"のデータ型は保存できません。また、インデックスを用いた高速な検索に対応してい"
"るのはMBRContainsだけです。MBRDisjointなどには対応していません。"

msgid ""
"For the table definition for geolocation search, you need to define a POINT "
"type column like in MyISAM and define SPATIAL INDEX for it.:"
msgstr ""
"位置情報検索を利用する場合のテーブル定義はMyISAMと同様にPOINT型のカラムを定義"
"し、そのカラムに対してSPATIAL INDEXを指定します。"

msgid ""
"To store data, you create POINT type data by using geomFromText() function "
"like in MyISAM:"
msgstr ""
"データの登録方法もMyISAMのときと同様にGeomFromText()関数を使って文字列から"
"POINT型の値を作成します。"

msgid ""
"If you want to find shops within the rectangle where Ikebukuro station "
"(139.7101 35.7292) is the top-left point and Tokyo Station (139.7662 "
"35.6815) is the bottom-right point, SELECT phrase is like the following:"
msgstr ""
"池袋駅（139.7101 35.7292）が左上の点、東京駅（139.7662 35.6815）が右下の点と"
"なるような長方形内にあるお店を探す場合は以下のようなSELECTになります。"

msgid "Here you can search by geolocation!"
msgstr "位置情報で検索できていますね！"

msgid "How to get the record ID"
msgstr "レコードIDの取得方法"

msgid ""
"Groonga assigns a unique number to identify the record when a record is "
"added in the table."
msgstr ""
"Groongaではテーブルにレコードを追加した際にレコードを一意に識別するための番号"
"が割当てられます。"

msgid ""
"To make the development of applications easier, you can get this record ID "
"by SQL in Mroonga"
msgstr ""
"Mroongaではアプリケーションの開発を容易にするため、このレコードIDをSQLで取得"
"できるようになっています。"

msgid ""
"To get the record ID, you need to create a column named ``_id`` when you "
"create a table:"
msgstr ""
"レコードIDを取得するためには、テーブル定義時に ``_id`` という名前のカラムを作"
"成して下さい。"

msgid ""
"Tye typo of ``_id`` column should be integer one (TINYINT, SMALLINT, "
"MEDIUMINT, INT or BIGINT)."
msgstr ""
"``_id`` カラムのデータ型は整数型(TINYINT、SMALLINT、MEDIUMINT、INT、BIGINT)で"
"ある必要があります。"

msgid "You can create an index for _id column, but it should be HASH type."
msgstr ""
"また_idカラムにはインデックスを作成することが可能ですが、HASH形式である必要が"
"あります。"

msgid ""
"Let's add records in the table by INSERT. Since _id column is implemented as "
"a virtual column and its value is assigned by Groonga, you cannot specify "
"the value when updating. So you need to exclude it from setting columns, or "
"you need to use ``null`` as its value:"
msgstr ""
"INSERTでテーブルにレコードを追加してみましょう。_idカラムは仮想カラムとして実"
"装されており、また_idの値であるレコードIDはGroongaにより割当てられるため、SQL"
"による更新時に値を指定することはできません。更新対象から外すか、値に "
"``null`` を使用する必要があります。"

msgid "To get the record ID, you invoke SELECT with _id column:"
msgstr "レコードIDを取得するには、_idカラムを含むようにしてSELECTを行います。"

msgid ""
"By using last_insert_grn_id function, you can also get the record ID that is "
"assigned by the last INSERT:"
msgstr ""
"また直前のINSERTにより割当てられたレコードIDについては、last_insert_grn_id関"
"数により取得することもできます。"

msgid ""
"last_insert_grn_id function is included in Mroonga as a User-Defined "
"Function (UDF), but if you have not yet register it in MySQL by CREATE "
"FUNCTION, you need to invoke the following SQL for defining a function:"
msgstr ""
"last_insert_grn_id関数はユーザ定義関数(UDF)としてMroongaに含まれていますが、"
"インストール時にCREATE FUNCTIONでMySQLに追加していない場合には、以下の関数定"
"義DDLを実行しておく必要があります。"

msgid ""
"As you can see in the example above, you can get the record ID by _id column "
"or last_insert_grn_id function. It will be useful to use this value in the "
"ensuing SQL queries like UPDATE:"
msgstr ""
"ご覧のように_idカラムやlast_insert_grn_id関数を通じてレコードIDを取得すること"
"ができました。ここで取得したレコードIDは後続のUPDATEなどのSQL文で利用すると便"
"利です。"

msgid "How to get snippet (Keyword in context)"
msgstr "スニペット（キーワード周辺のテキスト）の取得方法"

msgid ""
"Mroonga provides functionality to get keyword in context. It is implemented "
"as :doc:`/reference/udf/mroonga_snippet` UDF."
msgstr ""
"Mroongaは周辺テキスト付きでキーワードを取得する機能を提供しています。この機能"
"は :doc:`/reference/udf/mroonga_snippet` UDFとして実装されています。"

msgid "How to use similar search"
msgstr "類似文書検索の利用方法"

msgid ""
"Similar search is supported by specifying document itself instead of "
"specifying keywords in query."
msgstr ""
"類似文書検索では、クエリーにキーワードの代わりに文書の内容を指定します。"

msgid ""
"It is useful if you want to find documents which is related to specific "
"document."
msgstr "類似文書検索は、関連する文書を見つけるのに便利です。"

msgid "Here is the schema definition for execution examples:"
msgstr "実行例で使用するスキーマ定義はこちら。"

msgid "Here is the sample data for execution examples:"
msgstr "実行例で使用するサンプルデータはこちら。"

msgid "Here is the example of similar search by content itself."
msgstr "以下は文書の内容による類似文書検索の出力例です。 ::"

msgid ""
"Note that you need to specify an content of document in `AGAINST('...' IN "
"NATURAL LANGUAGE MODE)`."
msgstr ""
"`AGAINST('...' IN NATURAL LANGUAGE MODE)` に文書の内容を指定する必要があるこ"
"とに注意してください。"

msgid ""
"To improve degree of similarity, you may need to use language specific "
"tokenizer or use labeled data such as tag to get rid of some undesirable "
"search results."
msgstr ""
"類似度合いを向上させるには、言語特有のパーサーを使うとか、タグ付けされたデー"
"タを使って望ましくない検索結果を取り除く必要があります。"

msgid ""
"For example, if you want to execute similar search against Japanese text, it "
"is recommended to use language specific tokenizer - `TokenMecab`. Here is "
"the schema definition to use `TokenMecab` tokenizer:"
msgstr ""
"例えば、日本語の文書の類似文書検索をするなら、`TokenMecab` をパーサーに指定す"
"るのがおすすめです。以下は `TokenMecab` を使うスキーマ定義の例です。:"

msgid "How to run Groonga command"
msgstr "Groongaコマンドの実行方法"

msgid ""
"In storage mode, Mroonga stores all your data into Groonga database. You can "
"access Groonga database by SQL with Mroonga. SQL is very powerful but it is "
"not good for some operations such as faceted search."
msgstr ""
"ストレージモードではMroongaはすべてのデータをGroongaのデータベースに保存しま"
"す。Mroongaを使うことでSQLでGroongaのデータベースにアクセスできるようになりま"
"す。SQLはとても強力ですが、ファセット検索などのようないくつかの操作が得意では"
"ありません。"

msgid ""
"Faceted search is popular recently. Many online shopping sites such as "
"amazon.com and ebay.com support faceted search. Faceted search refines the "
"current search by available search parameters before users refine their "
"search. And faceted search shows refined searches. Users just select a "
"refined search. Users benefit from faceted search:"
msgstr ""
"最近ではファセット検索は一般的なものになりました。amazon.comやebay.comのよう"
"に多くのオンラインショッピングサイトがファセット検索をサポートしています。"
"ファセット検索はユーザが検索結果を絞り込む前に絞り込み検索をし、その絞り込み"
"検索の結果を表示します。ユーザは絞りこまれた結果から自分が探しているものを選"
"ぶだけです。ファセット検索を使うとユーザは以下のようなメリットがあります。"

msgid ""
"Users don't need to think about how to refine their search. Users just "
"select a showed refined search."
msgstr ""
"ユーザはどうやって検索結果を絞り込むかを考える必要はありません。単に表示され"
"た絞り込み結果から選ぶだけです。"

msgid ""
"Users don't get boared \"not match\" page. Faceted search showes only "
"refined searches that has one or more matched items."
msgstr ""
"ユーザは「見つかりませんでした」ページを見ることがありません。ファセット検索"
"では絞り込んだ結果のうち、ヒットする項目がある結果だけを表示します。"

msgid ""
"Faceted search needs multiple ``GROUP BY`` operations against searched "
"result set. To do faceted search by SQL, multiple ``SELECT`` requests are "
"needed. It is not effective."
msgstr ""
"絞り込み検索は検索結果に対して複数の ``GROUP BY`` 操作を実行する必要がありま"
"す。SQLでファセット検索をやろうとすると、複数の ``SELECT`` リクエストが必要に"
"なります。これは効率的ではありません。"

msgid ""
"Groonga can do faceted search by only one groonga command. It is effective. "
"Groonga has the ``select`` command that can search records with faceted "
"search. Faceted search is called as \"drilldown\" in Groonga. See `Groonga's "
"documentation about select command <http://groonga.org/docs/reference/"
"commands/select.html>`_ for more details."
msgstr ""
"Groongaは1回のgroongaコマンドでファセット検索をできます。これは効率的です。"
"Groongaには ``select`` コマンドというファセット検索に対応した検索コマンドがあ"
"ります。Groongaではファセット検索は「ドリルダウン（drilldown）」と呼んでいま"
"す。Groongaの ``select`` コマンドの詳細については `Groongaのドキュメント "
"<http://groonga.org/ja/docs/reference/commands/select.html>`_ を参照してくだ"
"さい。"

msgid ""
"Mroonga provides ``mroonga_command()`` function. You can run Groonga command "
"in SQL by the function. But you should use only ``select`` command. Other "
"commands that change schema or data may break consistency."
msgstr ""
"Mroongaは ``mroonga_command()`` 関数を提供しています。この関数を使えばSQLの中"
"で好きなGroongaコマンドを実行できます。しかし、使うのは ``select`` コマンドだ"
"けにしておくべきです。スキーマやデータを変更するコマンドを使うと一貫性が壊れ"
"てしまうかもしれません。"

msgid ""
"Each record has ``groonga`` or ``MySQL`` as ``tag``. Each record also has "
"``year`` and ``year_month``. You can use ``tag``, ``year`` and "
"``year_month`` as faceted search keys."
msgstr ""
"各レコードには ``tag`` として ``groonga`` あるいは ``MySQL`` が付いています。"
"各レコードは ``year`` と ``year_month`` カラムも持っています。ファセット検索"
"のキーとして ``tag`` 、 ``year`` 、 ``year_month`` を使えます。"

msgid ""
"Groonga calls faceted search as drilldown. So parameter key in Groonga is "
"``--drilldown``. Groonga returns search result as JSON. So "
"``mroonga_command()`` also returns search result as JSON. It is not SQL "
"friendly. You need to parse search result JSON by yourself."
msgstr ""
"Groongaはファセット検索のことをドリルダウンと呼んでいます。そのため、Groonga"
"でのパラメータ名は ``--drilldown`` となっています。Groongaは検索結果をJSONで"
"返します。そのため、 ``mroonga_command()`` も検索結果をJSONで返します。これは"
"SQLらしくありません。JSON形式の検索結果は自分でパースしないといけません。"

msgid ""
"Here is the example of faceted search by all available faceted search keys "
"(result JSON is pretty printed):"
msgstr ""
"以下は利用可能なファセット検索キーをすべて使った例です。（結果のJSONは整形済"
"み）"

msgid ""
"The first element ``[[3], [[\"_id\",\"UInt32\"]]]`` is normal search result. "
"It's not faceted search result."
msgstr ""
"最初の要素 ``[[3], [[\"_id\",\"UInt32\"]]]`` は通常の検索の結果です。これは"
"ファセット検索の結果ではありません。"

msgid "The second, third and forth elements are faceted search results:"
msgstr "2番目、3番目、4番目の要素がファセット検索の結果です。"

msgid ""
"The order of faceted search results is corresponding to the value of ``--"
"drilldown``. In this example, we specified ``tag``, ``year`` and "
"``year_month`` as ``--drilldown`` value. So the first faceted search result "
"is for ``tag``, the second one is for ``year`` and the third one is for "
"``year_month``."
msgstr ""
"ファセット検索の結果の順序は ``--drilldown`` に指定した値に対応します。この例"
"では、 ``--drilldown`` の値に ``tag`` と ``year`` と ``year_month`` を指定し"
"ています。そのため、最初のファセット検索の結果は ``tag`` 用の結果で、2番目は "
"``year`` 用の結果で、 3番目は ``year_month`` 用の結果です。"

msgid ""
"Each faceted search result uses the following format. This is the same as "
"normal search result:"
msgstr ""
"各ファセット検索の結果は次のフォーマットになります。このフォーマットは通常の"
"検索の結果と同じです。"

msgid ""
"The ``_key`` column value in faceted search result shows faceted search key."
msgstr ""
"ファセット検索の結果の ``_key`` カラムの値はファセット検索で使用したキーを示"
"します。"

msgid ""
"For example, the first faceted search result (the faceted search result for "
"``tag``) shows that matched records (all records in this case) have "
"``groonga`` and ``MySQL`` as ``tag`` value:"
msgstr ""
"たとえば、最初のファセット検索の結果（ ``tag`` のファセット検索の結果）はマッ"
"チしたレコード（今回のケースではすべてのレコード）は ``tag`` の値として "
"``groonga`` と ``MySQL`` があることを示しています。"

msgid ""
"The ``_nsubrecs`` column value in faceted search result shows the number of "
"records that have the corresponding faceted search key."
msgstr ""
"ファセット検索の結果の ``_nsubrecs`` カラムの値は対応するファセット検索のキー"
"を持つレコードが何件あるかを示します。"

msgid ""
"For example, the first faceted search result (the faceted search result for "
"``tag``) shows that there are 1 record that has ``groonga`` as ``tag`` value "
"and 2 records that have ``MySQL`` as ``tag`` value:"
msgstr ""
"たとえば、最初のファセット検索の結果（ ``tag`` のファセット検索の結果）は "
"``tag`` の値として ``groonga`` を持つレコードは1件あり、 ``tag`` の値として "
"``MySQL`` を持つレコードは2件あることを示しています。"

msgid ""
"See `Groonga's documentation about select command <http://groonga.org/docs/"
"reference/commands/select.html>`_ for more details."
msgstr ""
"詳細は `Groongaのselectコマンドのドキュメント <http://groonga.org/ja/docs/"
"reference/commands/select.html>`_ を確認してください。"

msgid "How to search by regular expression"
msgstr "正規表現検索の利用方法"

msgid ""
"In storage mode, you can use a Groonga's functionality from Mroonga as "
"described above. Thus, you can search records by using a regular expression "
"via Groonga's functionality."
msgstr ""
"ストレージモードでは、すでに述べたようにMroongaからGroongaの機能が使えます。"
"つまりGroongaの機能を使って正規表現で検索できます。"

msgid "There are some conditions to use regular expression in Mroonga."
msgstr "Mroongaで正規表現を使うにはいくつか条件があります。"

msgid ""
"Create an index with ``TokenRegexp`` tokenizer which is used in ``COMMENT``"
msgstr ""
"``COMMENT`` にて ``TokenRegexp`` トークナイザーを指定してインデックスを作成す"
"る"

msgid "Use ``*SS`` pragma and ``@~`` in ``WHERE MATCH ... AGAINST`` clause"
msgstr "``WHERE MATCH ... AGAINST`` にて ``*SS`` プラグマを使う"

msgid "Here is the example of search by regular expression."
msgstr "以下は正規表現による検索の出力例です。 ::"

msgid ""
"By using :ref:`boolean-mode-pragma-ss` pragma, you can search the records "
"which matches ``/var/log/auth.log`` with ``content @~ \"\\\\\\\\A/var/log/"
"auth\"``. ``@~`` is a Groonga's operator which executes a regular expression "
"search, and ``\"\\\\\\\\A/var/log/auth\"`` executes prefix search, so it "
"matches to only ``/var/log/auth.log``. ``/tmp/local/var/log/auth.log`` "
"doesn't match because it doesn't begin with \"/var/log/auth\"."
msgstr ""
":ref:`boolean-mode-pragma-ss` プラグマを使うことにより、 ``content @~ \"\\\\"
"\\\\A/var/log/auth\"`` で ``/var/log/auth`` ではじまるレコードを検索できま"
"す。 ``@~`` はGroongaで正規表現検索するためのオペレーターで、 ``\"\\\\\\\\A/"
"var/log/auth\"`` は前方一致検索を行うので、 ``/var/log/auth.log`` だけがマッ"
"チします。 ``/tmp/local/var/log/auth.log`` がマッチしないのは、``/var/log/"
"auth`` ではじまっていないからです。"

msgid ""
"See `Groonga's regular expression document <http://groonga.org/docs/"
"reference/regular_expression.html#syntax>`_ for more syntax details."
msgstr ""
"構文の詳細は `Groongaの正規表現のドキュメント <http://groonga.org/ja/docs/"
"reference/regular_expression.html#syntax>`_ を確認してください。"

msgid "Logging"
msgstr "ログ出力"

msgid "Mroonga outputs the logs by default."
msgstr "Mroongaではデフォルトでログの出力を行うようになっています。"

msgid ""
"Log files are located in MySQL's data directory with the filename  ``groonga."
"log``."
msgstr ""
"ログファイルはMySQLのデータディレクトリ直下に ``groonga.log`` というファイル"
"名で出力されます。"

msgid "Here is the example of the log. ::"
msgstr "以下はログの出力例です。 ::"

msgid ""
"The default log level is NOTICE, i.e. we have important information only and "
"we don't have debug information etc.)."
msgstr ""
"ログのデフォルトの出力レベルはNOTICE（必要な情報のみ出力。デバッグ情報などは"
"出力しない）となっております。"

msgid ""
"You can get the log level by ``mroonga_log_level`` system variable, that is "
"a global variable. You can also modify it dynamically by using SET phrase:"
msgstr ""
"ログの出力レベルは ``mroonga_log_level`` というシステム変数で確認することがで"
"きます（グローバル変数）。またSET文で動的に出力レベルを変更することもできま"
"す。"

msgid "Available log levels are the followings."
msgstr "設定可能なログレベルは以下の通りです。"

msgid "NONE"
msgstr ""

msgid "EMERG"
msgstr ""

msgid "ALERT"
msgstr ""

msgid "CRIT"
msgstr ""

msgid "ERROR"
msgstr ""

msgid "WARNING"
msgstr ""

msgid "NOTICE"
msgstr ""

msgid "INFO"
msgstr ""

msgid "DEBUG"
msgstr ""

msgid "DUMP"
msgstr ""

msgid "See :ref:`server-variable-mroonga-log-level` about details."
msgstr "詳細は :ref:`server-variable-mroonga-log-level` を参照してください。"

msgid ""
"You can reopen the log file by FLUSH LOGS. If you want to rotate the log "
"file without stopping MySQL server, you can do in the following procedure."
msgstr ""
"またFLUSH LOGSでログの再オープンを行うことができます。MySQLサーバを停止せずに"
"ログのローテートを行いたいような場合には、以下の手順で実行すると良いでしょ"
"う。"

msgid ""
"change the file name of ``groonga.log`` (by using OS's mv command etc.)."
msgstr "``groonga.log`` ファイルの名前を変更（OSコマンドのmvなどで）"

msgid ""
"invoke \"FLUSH LOGS\" in MySQL server (by mysql command or mysqladmin "
"command)."
msgstr ""
"MySQLサーバに対して\"FLUSH LOGS\"を実行（mysqlコマンドあるいはmysqladminコマ"
"ンドにて）"

msgid "Next step"
msgstr "次のステップ"

msgid ""
"Now, you can use Mroonga as storage mode! If you want Mroonga to be faster, "
"see also :doc:`/reference/optimizations`."
msgstr ""
"これでストレージモードでMroongaを使えるようになりました！Mroongaをもっと速く"
"したい場合は :doc:`/reference/optimizations` も参照してください。"

msgid "Footnotes"
msgstr "脚注"

msgid ""
"`MySQL 5.1 Reference Manual :: 11 Functions and Operations :: 11.7 Full-Text "
"Search Functions <http://dev.mysql.com/doc/refman/5.1/ja/fulltext-search."
"html>`_"
msgstr ""
"`MySQL 5.1 リファレンスマニュアル :: 11 関数と演算子 :: 11.7 全文検索関数 "
"<http://dev.mysql.com/doc/refman/5.1/ja/fulltext-search.html>`_"

msgid "In Groonga, we call it a 'tokenizer'."
msgstr "Groongaではトークナイザーと呼んでいる。"

msgid "Available tokenizers"
msgstr "利用可能なトークナイザー一覧"

msgid "Tokenizer"
msgstr "トークナイザー"

msgid "Description"
msgstr "説明"

msgid "``off``"
msgstr ""

msgid ""
"(``Deprecated``) It does not tokenize at all. Use ``off`` if you want to "
"treat ``content`` as is. For example, this value is used for prefix search."
msgstr ""
"(``非推奨``) トークナイズしません。 ``off`` は ``content`` をそのまま扱いたい"
"場合に使います。例えば、この値は前方一致検索のために指定します。"

msgid "``none``"
msgstr ""

msgid ""
"It does not tokenize at all. Use ``none`` if you want to treat ``content`` "
"as is. For example, this value is used for prefix search."
msgstr ""
"トークナイズしません。\"off\"は ``content`` をそのまま扱いたい場合に使いま"
"す。例えば、この値は前方一致検索のために指定します。"

msgid "``TokenBigram``"
msgstr ""

msgid ""
"It tokenises in bigram. But continuous alphabets, numbers or symbols are "
"treated as a token. So there can exist tokes with 3 letters or more. It is "
"to reduce noises."
msgstr ""
"バイグラムでトークナイズする。ただし、連続したアルファベット・連続した数字・"
"連続した記号はそれぞれ1つのトークンとして扱う。そのため、3文字以上のトークン"
"も存在する。これはノイズを減らすためである。"

msgid "This is the default value."
msgstr "デフォルト値。"

msgid "``TokenMecab``"
msgstr ""

msgid "It tokenises using MeCab. Groonga should be built with MeCab support."
msgstr ""
"MeCabを用いてトークナイズする。groongaがMeCabサポート付きでビルドされている必"
"要がある。"

msgid "``TokenBigramSplitSymbol``"
msgstr ""

msgid ""
"It tokenises in bigram. Unlike ``TokenBigram``, continuous symbols are not "
"treated as a token, but tokenised in bigram."
msgstr ""
"バイグラムでトークナイズする。 ``TokenBigram`` と異なり、記号が連続していても"
"特別扱いして1つのトークンとして扱わず通常のバイグラムの処理を行う。"

msgid ""
"When you use ``TokenBigramSplitSymbol`` instead of ``TokenBigram``, ``\"!?"
"\"`` can match ``\"!?!?!?\"`` in ``\"Is it really!?!?!?\"``. But when you "
"use ``TokenBigram``, only ``\"!?!?!?\"`` can match as well."
msgstr ""
"TokenBigramではなく ``TokenBigramSplitSymbol`` を利用すると「 ``Is it "
"really!?!?!?`` 」の「 ``!?!?!?`` 」の部分に「 ``!?`` 」でマッチする。 "
"``TokenBigram`` の場合は「 ``!?!?!?`` 」でないとマッチしない。"

msgid "``TokenBigramSplitSymbolAlpha``"
msgstr ""

msgid ""
"It tokenise in bigram. In addition to ``TokenBigramSplitSymbol``, continuous "
"alphabets are not treated as a token either, but tokenised in bigram."
msgstr ""
"バイグラムでトークナイズする。 ``TokenBigramSplitSymbol`` に加えて、連続した"
"アルファベットも特別扱いせずに通常のバイグラムの処理を行う。"

msgid ""
"When you use ``TokenBigramSplitSymbolAlpha`` instead of ``TokenBigram``, ``"
"\"real\"`` can match ``\"Is it really?\"``. But when you use "
"``TokenBigram``, only ``\"really\"`` can match as well."
msgstr ""
"``TokenBigram`` ではなく ``TokenBigramSplitSymbolAlpha`` を利用すると「 ``Is "
"it really?`` 」に「 ``real`` 」でマッチする。 ``TokenBigram`` の場合は"
"「 ``really`` 」でないとマッチしない。"

msgid "``TokenBigramSplitSymbolAlphaDigit``"
msgstr ""

msgid ""
"It tokenise in bigram. In addition to ``TokenBigramSplitSymbolAlpha``, "
"continuous numbers are not treated as a token either, but tokenised in "
"bigram. So any kind of characters are treated equally in bigram."
msgstr ""
"バイグラムでトークナイズする。 ``TokenBigramSplitSymbolAlpha`` に加えて、連続"
"した数字も特別扱いせずに通常のバイグラムの処理を行う。つまり、すべての字種を"
"特別扱いせずにバイグラムの処理を行う。"

msgid ""
"When you use ``TokenBigramSplitSymbolAlphaDigit`` instead of "
"``TokenBigram``, ``\"567\"`` can match ``\"090-0123-4567\"``. But when you "
"use ``TokenBigram``, only ``\"4567\"`` can match as well."
msgstr ""
"``TokenBigram`` ではなく ``TokenBigramSplitSymbolAlphaDigit`` を利用すると"
"「 ``090-0123-4567`` 」に「 ``567`` 」でマッチする。 ``TokenBigram`` の場合は"
"「 ``4567`` 」でないとマッチしない。"

msgid "``TokenBigramIgnoreBlank``"
msgstr ""

msgid "It tokenise in bigram. Unlike ``TokenBigram``, it ignores white spaces."
msgstr ""
"バイグラムでトークナイズする。 ``TokenBigram`` と異なり、空白を無視して処理す"
"る。"

msgid ""
"When you use ``TokenBigramIgnoreBlank`` instead of ``TokenBigram``, ``\"みな"
"さん\"`` can match ``\"み な さ ん 注 目\"``. But when you use "
"``TokenBigram``, only ``\"み な さ ん\"`` can match as well."
msgstr ""
"``TokenBigram`` ではなく ``TokenBigramIgnoreBlank`` を利用すると「 ``み な "
"さ ん 注 目`` 」に「 ``みなさん`` 」でマッチする。 ``TokenBigram`` の場合は"
"「 ``み な さ ん`` 」でないとマッチしない。"

msgid "``TokenBigramIgnoreBlankSplitSymbol``"
msgstr ""

msgid ""
"It tokenise in bigram. Unlike ``TokenBigramSplitSymbol``, it ignores white "
"spaces."
msgstr ""
"バイグラムでトークナイズする。 ``TokenBigramSplitSymbol`` と異なり、空白を無"
"視して処理する。"

msgid ""
"When you use ``TokenBigramIgnoreBlankSplitSymbol`` instead of "
"``TokenBigramSplitSymbol``, ``\"???\"`` can match ``\"! ? ???\"``. But when "
"you use ``TokenBigramSplitSymbol``, only ``\"? ??\"`` can match as well."
msgstr ""
"``TokenBigramSplitSymbol`` ではなく ``TokenBigramIgnoreBlankSplitSymbol`` を"
"利用すると「 ``! !? ??`` 」に「 ``???`` 」でマッチする。 "
"``TokenBigramSplitSymbol`` の場合は「 ``? ??`` 」でないとマッチしない。"

msgid "``TokenBigramIgnoreBlankSplitSymbolAlpha``"
msgstr ""

msgid ""
"It tokenise in bigram. Unlike ``TokenBigramSplitSymbolAlpha``, it ignores "
"white spaces."
msgstr ""
"バイグラムでトークナイズする。 ``TokenBigramSplitSymbolAlpha`` と異なり、空白"
"を無視して処理する。"

msgid ""
"When you use ``TokenBigramIgnoreBlankSplitSymbolAlpha`` instead of "
"``TokenBigramSplitSymbolAlpha``, ``\"ama\"`` can match ``\"I am a pen.\"``. "
"But when you use ``TokenBigramSplitSymbolAlpha``, only ``\"am a\"`` can "
"match as well."
msgstr ""
"``TokenBigramSplitSymbolAlpha`` ではなく "
"``TokenBigramIgnoreBlankSplitSymbolAlpha`` を利用すると「 ``I am a pen.`` 」"
"に「 ``ama`` 」でマッチする。 ``TokenBigramSplitSymbolAlpha`` の場合は"
"「 ``am a`` 」でないとマッチしない。"

msgid "``TokenBigramIgnoreBlankSplitSymbolAlphaDigit``"
msgstr ""

msgid ""
"It tokenise in bigram. Unlike ``TokenBigramSplitSymbolAlphaDigit``, it "
"ignores white spaces."
msgstr ""
"バイグラムでトークナイズする。 ``TokenBigramSplitSymbolAlphaDigit`` と異な"
"り、空白を無視して処理する。"

msgid ""
"When you use ``TokenBigramIgnoreBlankSplitSymbolAlphaDigit`` instead of "
"``TokenBigramSplitSymbolAlphaDigit``, ``\"9001\"`` can match ``\"090 0123 "
"4567\"``. But when you use ``TokenBigramSplitSymbolAlphaDigit``, only ``\"90 "
"01\"`` can match as well."
msgstr ""
"``TokenBigramSplitSymbolAlphaDigit`` ではなく "
"``TokenBigramIgnoreBlankSplitSymbolAlphaDigit`` を利用すると「 ``090 0123 "
"4567`` 」に「 ``9001`` 」でマッチする。 ``TokenBigramSplitSymbolAlphaDigit`` "
"の場合は「 ``90 01`` 」でないとマッチしない。"

msgid "``TokenDelimit``"
msgstr ""

msgid "It tokenise by splitting with a white space."
msgstr "空白区切りでトークナイズする。"

msgid ""
"``\"movie horror topic\"`` will be tokenised as ``\"movie\"``, ``\"horror"
"\"``, ``\"topic\"``."
msgstr ""
"「 ``movie horror topic`` 」をトークナイズすると「 ``movie`` 」、"
"「 ``horror`` 」、「 ``topic`` 」になります。"

msgid "``TokenDelimitNull``"
msgstr ""

msgid "It tokenise by splitting with a null character (``\\\\0``)."
msgstr "null文字（ ``\\\\0`` ）区切りでトークナイズする。"

msgid ""
"``\"movie\\\\0horror\\\\0topic\"`` will be tokenised as ``\"movie\"``, ``"
"\"horror\"``, ``\"topic\"``."
msgstr ""
"「 ``movie\\\\0horror\\\\0topic`` 」をトークナイズすると「 ``movie`` 」、"
"「 ``horror`` 」、「 ``topic`` 」になります。"

msgid "``TokenUnigram``"
msgstr ""

msgid ""
"It tokenises in unigram. But continuous alphabets, numbers or symbols are "
"treated as a token. So there can exist tokes with 2 letters or more. It is "
"to reduce noises."
msgstr ""
"ユニグラムでトークナイズする。ただし、連続したアルファベット・連続した数字・"
"連続した記号はそれぞれ1つのトークンとして扱う。そのため、2文字以上のトークン"
"も存在する。これはノイズを減らすためである。"

msgid "``TokenTrigram``"
msgstr ""

msgid ""
"It tokenises in trigram. But continuous alphabets, numbers or symbols are "
"treated as a token. So there can exist tokes with 4 letters or more. It is "
"to reduce noises."
msgstr ""
"トリグラムでトークナイズする。ただし、連続したアルファベット・連続した数字・"
"連続した記号はそれぞれ1つのトークンとして扱う。そのため、4文字以上のトークン"
"も存在する。これはノイズを減らすためである。"
